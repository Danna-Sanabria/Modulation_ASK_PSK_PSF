# -*- coding: utf-8 -*-
"""LAB 3 MODULACIÓN ASK, FSK y PSF

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WgxGX_dgpQqhCIe3ncbxoaepR3EO85tP

# 1.4 Modulación ASK, FSK y PSF

##1.4.1 Modulación por desplazamiento de Amplitud (ASK)
"""

import matplotlib.pylab as plt
import numpy as num

F1=int(input('Enter the frequency of carrier :'))
F2=int(input('Enter the frequency of pulse :'))

A=3;                              #Amplitude
t=num.arange(0,1,0.001)
x=A*num.sin(2*num.pi*F1*t)        #Carrier Sine wave
u=[]                              #Message signal
b=[0.2,0.4,0.6,0.8,1.0]
s=1
for i in t:
    if(i==b[0]):
        b.pop(0)
        if(s==0):
            s=1
        else:
            s=0
    u.append(s)
v=[]                              #Sine wave multiplied with square wave
for i in range(len(t)):
    v.append(A*num.sin(2*num.pi*F1*t[i])*u[i])

plt.figure(figsize = (30,10))
plt.subplot(131)
plt.plot(t,x,"tab:pink");
plt.xlabel('Time');
plt.ylabel('Amplitude');
plt.title('Carrier');
plt.grid(True)

plt.subplot(132)
plt.plot(t,u,"tab:pink")
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.title('Square wave Pulses')
plt.grid(True)

plt.subplot(133)
plt.plot(t,v, "tab:cyan")
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.title('ASK Signal')
plt.grid(True)
plt.show()

"""##1.4.2 Modulación por desplazamiento de Frecuencia (FSK)"""

import matplotlib.pylab as plt
import numpy as num
'''
considering all amplitude be 1
message signal(m)=Am*sin(2*π*fm*t)
carrier signal(c)=Ac*sin(2*π*fc*t)
modulated signal(y)=Ac*sin(2*π*fc*t + mi*sin(2*π*fm*t))
'''2
fm=float(input('Message Frequency='))#1
fc=float(input('Carrier Frequency='))#25
mi=float(input('Modulation Index='))#10
t=num.arange(0,1,0.001)

m=num.sin(2*num.pi*fm*t)#modulation wave

plt.figure(figsize = (30,10))
plt.subplot(131)
plt.plot(t,m, "tab:pink")
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.title('Message Signal')

c=num.sin(2*num.pi*fc*t);#carrier wave

plt.subplot(132)
plt.plot(t,c, "tab:pink")
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.title('Carrier Signal')
plt.grid(True)

y=num.sin(2*num.pi*fc*t+(mi*num.sin(2*num.pi*fm*t)))#Frequency changing w.r.t Message

plt.subplot(133)
plt.plot(t,y, "tab:cyan")
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.title('FM Signal')
plt.grid(True)
plt.show()

"""##1.4.3 Modulación por desplazamiento de Fase (PSK)"""

import matplotlib.pyplot as plt
import numpy as num
A=5;
t=num.arange(0,1,0.001)
f1=int(input('Carrier Sine wave frequency ='))
f2=int(input('Message frequency ='))
x=A*num.sin(2*num.pi*f1*t)

plt.figure(figsize = (30,10))
plt.subplot(131)
plt.plot(t,x,"tab:pink");
plt.xlabel("time");
plt.ylabel("Amplitude");
plt.title("Carrier");
plt.grid(True)

u=[]                                    #Message signal
b=[0.2,0.4,0.6,0.8,1.0]
s=1
for i in t:
    if(i==b[0]):
        b.pop(0)
        if(s==0):
            s=1
        else:
            s=0
        print(s,i,b)
    u.append(s)
print(u)

plt.subplot(132)
plt.plot(t,u,"tab:pink")
plt.xlabel('time')
plt.ylabel('Amplitude')
plt.title('Message Signal')
plt.grid(True)

v=[]                            #Sine wave multiplied with square wave
for i in range(len(t)):
    if(u[i]==1):
        v.append(A*num.sin(2*num.pi*f1*t[i]))
    else:
        v.append(A*num.sin(2*num.pi*f1*t[i])*-1)

plt.subplot(133)
plt.plot(t,v,"tab:cyan");
#plt.axis([0 1 -6 6]);
plt.xlabel("t");
plt.ylabel("y");
plt.title("PSK");
plt.grid(True)
plt.show()